version: '3.8'

services:
  # RDP服务端 - 连接池管理
  rdp-server:
    build: .
    container_name: rdp-server
    environment:
      - RDPTOOL_MODE=server
      - RDPTOOL_PORT=8888
      - RDPTOOL_CONFIG=/app/configs/server_config.json
      - RDPTOOL_LOG_DIR=/var/log/rdptool
    ports:
      - "8888:8888"
    volumes:
      - ./configs:/app/configs
      - ./logs:/var/log/rdptool
      - ./data:/app/data
    networks:
      - rdp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 代理服务 (可选)
  rdp-proxy:
    build: .
    container_name: rdp-proxy
    environment:
      - RDPTOOL_MODE=proxy
      - RDPTOOL_PROXY_PORT=1080
      - RDPTOOL_CONFIG=/app/configs/proxy_config.json
    ports:
      - "1080:1080"
    volumes:
      - ./configs:/app/configs
      - ./logs:/var/log/rdptool
    networks:
      - rdp-network
    depends_on:
      - rdp-server
    restart: unless-stopped
    profiles:
      - proxy

  # 被控端客户端示例
  rdp-target-client:
    build: .
    container_name: rdp-target-client
    environment:
      - RDPTOOL_MODE=client
      - RDPTOOL_SERVER_HOST=rdp-server
      - RDPTOOL_SERVER_PORT=8888
      - RDPTOOL_CONFIG=/app/configs/target_client_config.json
      - DISPLAY=${DISPLAY:-:0}
    volumes:
      - ./configs:/app/configs
      - ./logs:/var/log/rdptool
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    networks:
      - rdp-network
    depends_on:
      rdp-server:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - target-client

  # 控制端客户端示例
  rdp-controller-client:
    build: .
    container_name: rdp-controller-client
    environment:
      - RDPTOOL_MODE=client
      - RDPTOOL_SERVER_HOST=rdp-server
      - RDPTOOL_SERVER_PORT=8888
      - RDPTOOL_CONFIG=/app/configs/controller_client_config.json
      - DISPLAY=${DISPLAY:-:0}
    volumes:
      - ./configs:/app/configs
      - ./logs:/var/log/rdptool
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    networks:
      - rdp-network
    depends_on:
      rdp-server:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - controller-client

  # Redis缓存 (可选，用于会话管理)
  redis:
    image: redis:7-alpine
    container_name: rdp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - rdp-network
    restart: unless-stopped
    profiles:
      - cache
    command: redis-server --appendonly yes

  # 监控服务 (可选)
  rdp-monitor:
    image: prom/prometheus:latest
    container_name: rdp-monitor
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - rdp-network
    restart: unless-stopped
    profiles:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

networks:
  rdp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local